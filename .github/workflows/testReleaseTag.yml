---
name: "tagged-release"

on:
  push:
    tags:
      - "v*"

jobs:
  tagged-release:
    name: "Tagged Release"
    runs-on: "ubuntu-latest"

    steps:
      # ...
      - name: "Build & test"
        run: |
          echo "done!"

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.TOKEN }}"
          prerelease: false
      
      - uses: actions/checkout@master
      
      - name: Compress action step
        uses: a7ul/tar-action@v1.1.0
        id: compress
        with:
          command: c
          files: |
           ./
          outPath: test.tar.gz
          
      - name: Generate md5 checksum
        uses: jmgilman/actions-generate-checksum@v1
        with:
          method: md5
          output: md5.txt
          patterns: ./*.tar.gz
          
      - name: Read md5 checksum file
        id: getmd5
        run: echo "::set-output name=md5::$(cat md5.txt)"
        
      - name: Generate sha1 checksum
        uses: jmgilman/actions-generate-checksum@v1
        with:
          method: sha1
          output: sha1.txt
          patterns: ./*.tar.gz
          
      - name: Read sha1 checksum file
        id: getsha1
        run: echo "::set-output name=sha1::$(cat md5.txt)"
        
      - name: Generate sha256 checksum
        uses: jmgilman/actions-generate-checksum@v1
        with:
          method: sha256
          output: sha256.txt
          patterns: ./*.tar.gz
          
      - name: Read sha256 checksum file
        id: getsha256
        run: echo "::set-output name=sha256::$(cat md5.txt)"
        
      - name: update release
        id: update_release
        uses: tubone24/update_release@v1.0
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          body: |
            md5: ${{ steps.getmd5.outputs.md5 }}
            sha1: ${{ steps.getsha1.outputs.sha1 }}
            sha256: ${{ steps.getsha256.outputs.sha256 }}
          isAppendBody: true
          
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.update_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./test.tar.gz
          asset_name: test.tar.gz
          asset_content_type: application/zip
